<?xml version="1.0" encoding="UTF-8" ?>
<definitions
        xmlns="http://www.omg.org/spec/BPMN/20100524/MODEL"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns:activiti="http://activiti.org/bpmn"
        typeLanguage="http://www.w3.org/2001/XMLSchema"
        expressionLanguage="http://www.w3.org/1999/XPath"
        targetNamespace="activiti-report">

    <process id="intermediateReminder" name="Reminder">

        <startEvent id="theStart" name="Start"/>

        <transaction id="TP" name="Reminder Transaction">

            <userTask id="userTask" name="User Cancel Timer Task"/>

            <intermediateCatchEvent id="timer" name="Timer">
                <timerEventDefinition>
                    <timeDuration>PT30S</timeDuration>
                </timerEventDefinition>
            </intermediateCatchEvent>

            <!--
                    <serviceTask id="reminderTask"
                      activiti:delegateExpression="${reminderDelegate}"/>
            -->
            <serviceTask id="reminderTask" name="Reminder Service Task"
                         activiti:expression="#{reminderDelegate.m3Reminder(execution)}"/>

            <startEvent id="tpStart"/>
            <parallelGateway id="fork" name="Fork"/>
            <sequenceFlow sourceRef="tpStart" targetRef="fork"/>

            <sequenceFlow sourceRef="fork" targetRef="timer"/>
            <sequenceFlow sourceRef="fork" targetRef="userTask"/>
            <sequenceFlow sourceRef="timer" targetRef="reminderTask"/>

            <exclusiveGateway id="join" name="Join"/>
            <sequenceFlow sourceRef="userTask" targetRef="join"/>
            <sequenceFlow sourceRef="reminderTask" targetRef="join"/>
            <endEvent id="tpEnd">
                <cancelEventDefinition/>
            </endEvent>

            <sequenceFlow sourceRef="join" targetRef="tpEnd"/>

        </transaction>
        <boundaryEvent id="tpTancel" attachedToRef="TP">
            <cancelEventDefinition />
        </boundaryEvent>

        <sequenceFlow sourceRef="theStart" targetRef="TP"/>
        <sequenceFlow sourceRef="TP" targetRef="theEnd"/>

        <endEvent id="theEnd" name="End"/>

    </process>

</definitions>
